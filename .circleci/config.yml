version: 2
jobs:
  test-python3:
    docker:
      - image: circleci/python:3
    working_directory: ~/zipload
    steps:
      - checkout
      # Let's install the dependencies
      - run:
          name: Install Dependencies
          command: |
            poetry install
      # Save's the specified path as a cache. This is the path Poetry uses to install the dependencies
      # So if you don't install anything new, this folder won't change and the cache will be effective
      - save_cache:
          key: deps-{{ checksum "poetry.lock" }}
          paths:
            - /home/circleci/.cache/pypoetry/virtualenvs
      - run:
          name: Lint
          command: |
            poetry run pylint *.py
      - run:
          name: Run tests
          command: |
            poetry run pytest
  # This is the definition of another job, the one we use to publish the package to PyPI
  deployment:
    # Same environment
    docker:
        - image: circleci/python:3
    steps:
      # Gets the code
      - checkout
      # Use `poetry publish` to Publish the package using username and password from CircleCI environment variables
      # Which can be configured inside CircleCI's interface
      - run:
          name: Push to PyPI
          command: |
            poetry publish \
              --build \
              --username "${PYPI_USERNAME}" \
              --password "${PYPI_PASSWORD}" \
              --no-interaction

workflows:
  version: 2
  build:
    jobs:
      - test-python3

  # The deployment workflow publishes the package
  deployment-workflow:
    jobs:
      # Runs build and test, but now just on Git tags (created from a GitHub release)
      - test-python3:
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
      # Runs the deployment job, just with the tags as well
      - deployment:
          requires:
            - test-python3
          filters:
              tags:
                only: /v[0-9]+(\.[0-9]+)*/
              branches:
                ignore: /.*/
